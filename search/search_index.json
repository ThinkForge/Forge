{
    "docs": [
        {
            "location": "/",
            "text": "Home\n\n\nWelcome to the Forge language documentation!\n\n\nWe hope you enjoy your stay. If you have any feedback, please do not hesitate to open an issue \nhere\n.\n\n\nForge Is\n\n\n\n\nAn Elixir-like language that compiles to WebAssembly\n\n\nA functional language\n\n\nAn open source project\n\n\nNot ready to use in the wild\n\n\n\n\nForge Is Not\n\n\n\n\nReady to be used!\n\n\nFeature-complete\n\n\nA direct clone of Elixir\n\n\n\n\nWhat Now\n\n\nIf you are still interested after the bullet points, take a look at the \nGitHub issues\n page to see if there is anything you can help with! The help is always appreciated.",
            "title": "Home"
        },
        {
            "location": "/#home",
            "text": "Welcome to the Forge language documentation!  We hope you enjoy your stay. If you have any feedback, please do not hesitate to open an issue  here .",
            "title": "Home"
        },
        {
            "location": "/#forge-is",
            "text": "An Elixir-like language that compiles to WebAssembly  A functional language  An open source project  Not ready to use in the wild",
            "title": "Forge Is"
        },
        {
            "location": "/#forge-is-not",
            "text": "Ready to be used!  Feature-complete  A direct clone of Elixir",
            "title": "Forge Is Not"
        },
        {
            "location": "/#what-now",
            "text": "If you are still interested after the bullet points, take a look at the  GitHub issues  page to see if there is anything you can help with! The help is always appreciated.",
            "title": "What Now"
        },
        {
            "location": "/Specification/overview/",
            "text": "Specification Overview\n\n\nThis page should provide a brief summary of the syntax of the language for you.\n\n\nFunctions\n\n\nForge defines functions in the same way as Elixir does. For example, here is a function that takes two numbers and adds them.\n\n\n# add/2\ndef Add(a, b) do\n  a + b\nend\n\n\n\n\nNote the automatic return of the result of the last statement evaluated. This is again the same as in Elixir.\n\n\nModules\n\n\nForge defines modules instead of the typical Class you might see in C++. Remember, Forge is a Functional language, so Modules act differently than classes as well.\n\n\ndefmodule Adder do\n  def Add(a, b) do\n    a + b\n  end\nend\n\n\n\n\nVariable Types\n\n\nForge has the same types as Elixir, which also mirrors many other languages.\n\n\nIntegers\n\n\nIntegers are for storing non-floating point numbers.\n\n\nx = 10\n\n\n\n\nFloats\n\n\nFloats are for storing floating point numbers.\n\n\nx = 10.0\n\n\n\n\nBooleans\n\n\nForge uses true and false for boolean values.",
            "title": "Specification Overview"
        },
        {
            "location": "/Specification/overview/#specification-overview",
            "text": "This page should provide a brief summary of the syntax of the language for you.",
            "title": "Specification Overview"
        },
        {
            "location": "/Specification/overview/#functions",
            "text": "Forge defines functions in the same way as Elixir does. For example, here is a function that takes two numbers and adds them.  # add/2\ndef Add(a, b) do\n  a + b\nend  Note the automatic return of the result of the last statement evaluated. This is again the same as in Elixir.",
            "title": "Functions"
        },
        {
            "location": "/Specification/overview/#modules",
            "text": "Forge defines modules instead of the typical Class you might see in C++. Remember, Forge is a Functional language, so Modules act differently than classes as well.  defmodule Adder do\n  def Add(a, b) do\n    a + b\n  end\nend",
            "title": "Modules"
        },
        {
            "location": "/Specification/overview/#variable-types",
            "text": "Forge has the same types as Elixir, which also mirrors many other languages.",
            "title": "Variable Types"
        },
        {
            "location": "/Specification/overview/#integers",
            "text": "Integers are for storing non-floating point numbers.  x = 10",
            "title": "Integers"
        },
        {
            "location": "/Specification/overview/#floats",
            "text": "Floats are for storing floating point numbers.  x = 10.0",
            "title": "Floats"
        },
        {
            "location": "/Specification/overview/#booleans",
            "text": "Forge uses true and false for boolean values.",
            "title": "Booleans"
        }
    ]
}